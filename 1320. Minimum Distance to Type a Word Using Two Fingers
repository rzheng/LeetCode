class Solution {

	public int minimumDistance(String word) {
		return IntStream.range(1, word.length()).boxed().reduce(new int[31], (t, u) -> (t[3] = Math.abs((word.charAt(u - 1) - 65) / 6 - (word.charAt(u) - 65) / 6) + Math.abs((word.charAt(u - 1) - 65) % 6 - (word.charAt(u) - 65) % 6)) + (t[4] = word.charAt(u - 1) - 60) + IntStream.range(0, 26).reduce(0, (v, w) -> t[t[4]] = Math.max(t[t[4]], t[w + 5] + t[3] - Math.abs(w / 6 - (word.charAt(u) - 65) / 6) - Math.abs((word.charAt(u) - 65) % 6 - w % 6))) == (t[0] = (t[2] += t[3]) - (t[1] = Math.max(t[1], t[word.charAt(u - 1) - 60]))) ? t : t, (t, u) -> t)[0];
	}
}
